# OVERALL CONDITIONALS {{{
_islinux=false
[[ "$(uname -s)" =~ Linux|GNU|GNU/* ]] && _islinux=true

_isarch=false
[[ -f /etc/arch-release ]] && _isarch=true

_isxrunning=false
[[ -n "$DISPLAY" ]] && _isxrunning=true

_isroot=false
[[ $UID -eq 0 ]] && _isroot=true
# }}}


# BASH OPTIONS {{{
#shopt -s cdspell                 # Correct cd typos
shopt -s checkwinsize            # Update windows size on command
shopt -s histappend              # Append History instead of overwriting file
shopt -s cmdhist                 # Bash attempts to save all lines of a multiple-line command in the same history entry
shopt -s expand_aliases
shopt -s extglob                 # Extended pattern
shopt -s no_empty_cmd_completion # No empty completion
#}}}


# COMPLETION {{{
bind 'set completion-ignore-case on'
complete -cf sudo
if [[ -f /etc/bash_completion ]]; then
  . /etc/bash_completion
fi
# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
#}}}


# CONFIG {{{
export PATH=/usr/local/bin:$PATH
if [[ -d "$HOME/bin" ]] ; then
  PATH="$HOME/bin:$PATH"
fi
# RUBY {{{
#if which ruby &>/dev/null; then
# GEM_DIR=$(ruby -rubygems -e 'puts Gem.user_dir')/bin
#  if [[ -d "$GEM_DIR" ]]; then
#    export PATH=$GEM_DIR:$PATH
#  fi
#fi
#}}}
# NVM {{{
if [[ -f "/usr/share/nvm/nvm.sh" ]]; then
  source /usr/share/nvm/init-nvm.sh
fi
#}}}
# CHRUBY {{{
if [[ -f "/usr/share/chruby/chruby.sh" ]]; then
  source /usr/share/chruby/chruby.sh
fi
#}}}
# VTE {{{
if [[ -f "/etc/profile.d/vte.sh" ]]; then
  . /etc/profile.d/vte.sh
fi
#}}}
# ANDROID SDK {{{
if [[ -d "/opt/android-sdk" ]]; then
  export ANDROID_HOME=/opt/android-sdk
fi
#}}}
#}}}


# EDITOR {{{
if which nvim &>/dev/null; then
  export EDITOR="nvim"
elif which emacs &>/dev/null; then
  export EDITOR="emacs -nw"
else
  export EDITOR="nano"
fi
#}}}


# BASH HISTORY {{{
# make multiple shells share the same history file
export HISTSIZE=1000            # bash history will save N commands
export HISTFILESIZE=${HISTSIZE} # bash will remember N commands
export HISTCONTROL=ignoreboth   # ingore duplicates and spaces
export HISTIGNORE='&:ls:ll:la:cd:exit:clear:history'
#}}}
